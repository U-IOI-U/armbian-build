# This is a basic workflow that is manually triggered

name: Build Armbian Image

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      board:
        description: 'armbian build board'
        default: 'odroidc2'
        required: true
        type: string
      release:
        description: 'armbian build release'
        default: 'jammy'
        required: true
        type: string
      branch:
        description: 'armbian build branch'
        default: 'v23.02'
        required: true
        type: string

env:
  TZ: Asia/Shanghai

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "greet"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-22.04
    if: github.event.repository.owner.id == github.event.sender.id

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Runs a single command using the runners shell
    - name: Checkout
      uses: actions/checkout@v2

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install -y $(curl -fsSL https://is.gd/depend_ubuntu2204_armbian)
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir
        echo "COMPILE_STARTINGTIME=$(date +"%Y.%m.%d-%H%M")" >> $GITHUB_ENV

    - name: Clone Armbian and fix it
      run: |
        git clone -b ${{ github.event.inputs.branch }} --depth=1 https://github.com/armbian/build.git armbian-build
        cp -rf userpatches armbian-build/
        cd armbian-build
        bash ../scripts/modify_armbian.sh

    - name: Build Armbian
      id: build
      run: |
        cd armbian-build
        sudo ./compile.sh odroidc2 BOARD="${{ github.event.inputs.board }}" RELEASE="${{ github.event.inputs.release }}" EXTRAWIFI=yes

    - name: Copy Files
      run: |
        cd armbian-build
        for f_name in "*.deb" "*.img" "*.img.sha" "*.img.txt"; do
          for i in `find output/ -name "$f_name" 2>/dev/null`; do
            if [ -f "$i" ]; then
              cp "$i" /workdir
            fi
          done
        done
        build_file=$(find /workdir -type f 2>/dev/null | wc -l)
        if [ "$build_file" -eq "0" ]; then
          echo "no build files !"
          exit 1
        else
          echo "status=success" >> ${GITHUB_OUTPUT}
        fi

    - name:  Upload Artifact
      uses: actions/upload-artifact@v4.1.0
      if: ${{steps.build.outputs.status}} == 'success' && !cancelled()
      with:
        name: output
        path: /workdir/*

    - name: Upload file to Release
      uses: ncipollo/release-action@main
      with:
        tag: Armbian_${{ github.event.inputs.branch }}_${{ github.event.inputs.board }}_${{ github.event.inputs.release }}_${{ env.COMPILE_STARTINGTIME }}
        artifacts: /workdir/*
        allowUpdates: true
        token: ${{ secrets.GH_TOKEN }}
        body: |
          This is Armbian dtb image
